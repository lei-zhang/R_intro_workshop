? "hBayesDM"
?gng_m1(
)
f <- gng_m1('example', niter = 200, nwarmup = 100, nchains = 2, pcomp = 2)
plot(f)
?plot
q()
dummy_w <- rbinom( 1e5 , size=2 , prob=0.7 )
dim(dummy_w)
tabel(bummy_)
tabel(dummy_w)
table(dummy_w)
?"table"
library(hBayesDM)
output1 = gng_m1("example", nchain=3, ncore=3)
output1 = gng_m2("example", nchain=3, ncore=3)
install.packages("rstan", dependencies = T)
install.packages("rstan", dependencies = T)
q()
library(hBayesDM)
o <- gng_m1('example', nchain = 3, ncore = 3)
install.packages('rstan', dependencies = T)
library(rstan)
install.packages('hBayesDM', dependencies = T)
library(hBayesDM)
m <- gng_m1('example', nchain = 3, ncore = 3)
remove.packages('rstan')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat("\nCXXFLAGS+=-flto -ffat-lto-objects  -Wno-unused-local-typedefs",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat("\nCXXFLAGS += -Wno-ignored-attributes -Wno-deprecated-declarations",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
Sys.setenv(MAKEFLAGS = "-j4")
.libPaths()[1]
install.packages("http://win-builder.r-project.org/Z1N0He79FT3r/rstan_2.10.1-1.zip",
repos = NULL, dependencies = TRUE)
install.packages("http://win-builder.r-project.org/Z1N0He79FT3r/rstan_2.10.1-1.zip",
repos = NULL, dependencies = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat("\nCXXFLAGS+=-flto -ffat-lto-objects  -Wno-unused-local-typedefs",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat("\nCXXFLAGS += -Wno-ignored-attributes -Wno-deprecated-declarations",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("http://win-builder.r-project.org/Z1N0He79FT3r/rstan_2.10.1-1.zip",
repos = NULL, dependencies = TRUE)
library(rstan)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
library(rstan)
fit <- stan(file = '8schools.stan', data = schools_dat,iter = 1000, chains = 4))
fit <- stan(file = '8schools.stan', data = schools_dat,iter = 1000, chains = 4)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,iter = 1000, chains = 4)
remove.packages('rstan')
q()
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat("\nCXXFLAGS+=-flto -ffat-lto-objects  -Wno-unused-local-typedefs",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("http://win-builder.r-project.org/Z1N0He79FT3r/rstan_2.10.1-1.zip",
repos = NULL, dependencies = TRUE)
library(rstan)
rstan:::rstudio_stanc("8schools.stan")
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
library(rstan) # observe startup messages
rstan_options(auto_write = TRUE)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,iter = 1000, chains = 4)
remove.packages('rstan')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("http://win-builder.r-project.org/Z1N0He79FT3r/rstan_2.10.1-1.zip",
repos = NULL, dependencies = TRUE)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
library(rstan)
fit <- stan(file = '8schools.stan', data = schools_dat,iter = 1000, chains = 4)
remove.packages('rstan')
dir(system.file("libs", package = "rstan"))
"Hello world"
'Hello world'
'Hello" world'
'Hello\" world'
'Hello\'s world'
'Hello's world'
b1 <- 'Hello World!'
b2 <- "Hello World!"
b3 <-  'UKE: "Hello World!"'
b4 <-  "UKE: 'Hello World!'"
b1
b2
b3
b3 <-  'UKE "Hello World!" '
b3
"Hello 'World'"
'Hello "world"'
'Hello \"world\"'
' Hello \"world\" '
b4
b1 <- 'Hello World!'
b2 <- "Hello World!"
b3 <-  'Hello "World"!'
b4 <-  "Hello 'World'!"
b1
b2
b3
b4
b5 <- "Hello Neuroscience\'s World!"
b5
v <- 1:20
m1 <- matrix(v, r=5)
m1 <- matrix(v, row=5)
?matrix
m1 <- matrix(v, nrow=5, ncol=4)
m1
m2 <- matrix(v, nrow=3, ncol=4, byrow = T)
v <- 1:12
m1 <- matrix(v, nrow=3, ncol=4)
m2 <- matrix(v, nrow=3, ncol=4, byrow = T)
m1
m2
?array
arr <- array(v, dim(2,2,3))
arr <- array(v, dim=c(2,2,3))
arr
?factor
factor(c(1,2,5))
factor(c(1,2,5),levels = 4)
factor(c(1,2,5),levels = 3)
factor(c(1,2,5))
factor(c(1,2,5), labels=c('a','b','c'))
factor(letters[1:12], labels = "letter")
factor(letters[1:12])
factor(letters[1 1 2 2 3:16])
factor(letters[c(1, 1, 2, 2, 3:16)])
factor(letters[c(1, 1, 2, 2, 3:12)])
f = factor(letters[c(1, 1, 2, 2, 3:12)])
length(f)
f = factor(letters[c(1, 1, 2, 2, 3:10)])
length(f)
f
(sum(rownames(installed.packages())=="ggplot2")==0)
sum(rownames(installed.packages())=="ggplot2")==0
rownames(installed.packages())=="ggplot2"
library(ggplot2)
rownames(installed.packages())=="rstan"
rownames(installed.packages())
rownames(installed.packages())=="ggplot2"
sum(rownames(installed.packages())=="ggplot2")
source('E:/zhang/Desktop/BayesCog_package_installation.R')
library(Cairo)
Sys.getenv('PATH')
system('g++ -v')
system('where make')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
dotR
file.path(dotR, "Makevars")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
library(rstan)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = 'E:/zhang/Desktop/8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
fit <- stan(file = 'E:/zhang/Desktop/8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
library(rstan)
funnel <- stan_demo("funnel", seed = 12345)
funnel <- stan_demo("funnel", seed = 12345)
funnel <- stan_demo("funnel", seed = 12345)
funnel <- stan_demo("funnel", seed = 12345)
funnel <- stan_demo("funnel", seed = 12345)
pairs(funnel, pars = c("y", "x[1]", "lp__"), las = 1)
print(funnel)
pairs(funnel, pars = c("y", "x[1]", "lp__"))
funnel_reparam <- stan_demo("funnel_reparam")
d = read.table('E:/zhang/Desktop/try.txt', sep = ' ')
d = read.table('E:/zhang/Desktop/try.txt', sep = '\t')
d
d = read.table('E:/zhang/Desktop/try.txt', sep = ' ')
d = read.table('E:/zhang/Desktop/try.txt', sep = '')
d = read.table('E:/zhang/Desktop/try.txt')
d = read.table('E:/zhang/Desktop/try.txt', sep = '')
d = read.table('E:/zhang/Desktop/try.txt', sep = ' ')
d = read.table('E:/zhang/Desktop/try.txt', sep = ' ', stringsAsFactors = F)
d = read.table('E:/zhang/Desktop/try.txt', sep = '\t', stringsAsFactors = F)
d
d[1]
d[1,]
d[2,]
d[,1]
library(rstan)
library(loo)
q()
clc
?qnorm
qnorm(0, 0,1)
qnorm(.5, 0,1)
mean(c(1,2,3,4))
q()
library(rstan)
install.packages("ggplot2")
install.packages('ggthemes')
install.packages("R.matlab")
install.packages("devtools")
install.packages("R.utils")
install.packages("runjags")
install.packages("rjags")
install.packages("car")
install.packages("gdata")
install.packages("plyr")
install.packages("dplyr")
install.packages("lme4")
install.packages("lattice")
install.packages("latticeExtra")
install.packages("modeest")
install.packages("coda")
install.packages("reshape2")
install.packages("BayesFactor")
install.packages("restorepoint")
install.packages("loo")
install.packages("DMwR")
install.packages("ellipse")
install.packages("corrplot")
install.packages("installr")
install.packages("arm")
#install.packages("rstan")
install.packages("shinystan")
install.packages("broom")
install.packages("ez")
install.packages("RWiener")
install.packages("boot")
install.packages("pryr")
install.packages("profvis")
install.packages("rmarkdown")
install.packages("GGally")
install.packages("Cairo") # for better graphics
install.packages("chron") # dealing with date/time
install.packages("microbenchmark") # runtime, performance
install.packages("bayesplot")
install.packages("rms")
install.packages("Hmisc")
install.packages("rmutil")
library(rstan)
library(loo)
R.version
R.version()
stan_version()
library(rstan)
f = readRDS('_outputs/fit_rl_mp_hrch.RData')
? read.csv
data = read.csv('E:/zhang/Desktop/Fund_Huafeng.csv', header = T, sep=';', stringsAsFactors = F)
dat
data
26.1 * 14
49.6 * 9
22.3 * 15
25.11 * 14
data = read.csv('E:/zhang/Desktop/Fund_Huafeng.csv', header = T, sep=';', stringsAsFactors = F)
data
data$Name = as.factor(data$Name)
s_name = unique(data$Name)
s_name
data = read.csv('E:/zhang/Desktop/Fund_Huafeng.csv', header = T, sep=';', stringsAsFactors = F)
#data$Name = as.factor(data$Name)
s_name = unique(data$Name)
s_name
data
s_name = unique(data$Name)
ns = length(s_name)
ns
j
j=1
data_s = data[data$Name == ns[j],]
data_s
ns[j]
data_s = data[data$Name == s_name[j],]
data_s
sum(data_s$singlePrice) / sum(data_s$amount)
sum(data_s$amount)
sum(data_s$singlePrice)
data_s$singlePrice * data_s$amount
sum(data_s$singlePrice * data_s$amount) / sum(data_s$amount)
500 / 47.13
thres
thres  = sum(data_s$singlePrice * data_s$amount) / sum(data_s$amount)
thres
for (t in 1:round(500 / thres)) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + t * stockPrice[j]) / sum(data_s$amount + t)
}
stockPrice = c(48, 20)
for (t in 1:round(500 / thres)) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + t * stockPrice[j]) / sum(data_s$amount + t)
}
array(0, c(1, round(500 / thres)))
array(0, c(round(500 / thres)))
new_thres = array(0, c(round(500 / thres)))
for (t in 1:round(500 / thres)) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + t * stockPrice[j]) / sum(data_s$amount + t)
}
new_thres
data_s
thres
c(round(500 / thres)
)
stockPrice = c(20, 20)
for (t in 1:round(500 / thres)) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + t * stockPrice[j]) / sum(data_s$amount + t)
}
new_thres
for (t in 1:10) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + 10 * (t+40)) / sum(data_s$amount + 10)
}
new_thres
plot(t, new_thres)
rm(new_thres)
for (t in 1:10) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + 10 * (t+40)) / sum(data_s$amount + 10)
}
new_thres = array(0, 10)
for (t in 1:10) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + 10 * (t+40)) / sum(data_s$amount + 10)
}
plot(t, new_thres)
length(t)
plot(1:10, new_thres)
new_thres
for (t in 1:10) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + 10 * (t+40)) / sum(data_s$amount + 10)
}
new_thres
new_thres = array(0, length(1:20))
for (t in 1:20) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + 10 * (t+35)) / sum(data_s$amount + 10)
}
new_thres
stockPrice = c(20, 20)
new_thres = array(0, round(500 / thres))
for (t in 1:round(500 / thres)) {
new_thres[t] = sum(data_s$singlePrice * data_s$amount + t * stockPrice[j]) / sum(data_s$amount + t)
}
new_thres
rstan:::rstudio_stanc("E:/zhang/Desktop/FSIA.stan")
rstan:::rstudio_stanc("E:/zhang/Desktop/FSIA.stan")
rstan:::rstudio_stanc("E:/zhang/Desktop/FSIA.stan")
library(rstan)
? stan
library(ggplot2)
x = rnorm(10)
y = x + rnorm(10, 0, 0.8)
ggplot2::qplot(x,y)
ggplot2::ggplot(x,y)
N = 14
-2 * (log(.6875)* N) + 5 * log(N) / N
-2 * (log(.6775)* N) + 5 * log(N) / N
-2 * (log(.67)* N) + 5 * log(N) / N
-2 * (log(.675)* N) + 5 * log(N) / N
-2 * (log(.671)* N) + 5 * log(N) / N
-2 * (log(.672)* N) + 5 * log(N) / N
-2 * (log(.6701)* N) + 5 * log(N) / N
-2 * (log(.6702)* N) + 5 * log(N) / N
-2 * (log(.66)* N) + 5 * log(N) / N
-2 * (log(.65)* N) + 5 * log(N) / N
-2 * (log(.6505)* N) + 5 * log(N) / N
-2 * (log(.6503)* N) + 5 * log(N) / N
-2 * (log(.6501)* N) + 5 * log(N) / N
-2 * (log(.6508)* N) + 5 * log(N) / N
-2 * (log(.655)* N) + 5 * log(N) / N
-2 * (log(.658)* N) + 5 * log(N) / N
-2 * (log(.652)* N) + 5 * log(N) / N
-2 * (log(.6505)* N) + 5 * log(N) / N
-2 * (log(.6515)* N) + 5 * log(N) / N
-2 * (log(.6525)* N) + 5 * log(N) / N
-2 * (log(.6522)* N) + 5 * log(N) / N
-2 * (log(.6521)* N) + 5 * log(N) / N
-2 * (log(.63)* N) + 5 * log(N) / N
-2 * (log(.6)* N) + 5 * log(N) / N
-2 * (log(.61)* N) + 5 * log(N) / N
-2 * (log(.62)* N) + 5 * log(N) / N
-2 * (log(.615)* N) + 5 * log(N) / N
-2 * (log(.616)* N) + 5 * log(N) / N
-2 * (log(.617)* N) + 5 * log(N) / N
-2 * (log(.618)* N) + 5 * log(N) / N
-2 * (log(.6175)* N) + 5 * log(N) / N
-2 * (log(.6176)* N) + 5 * log(N) / N
-2 * (log(.6177)* N) + 5 * log(N) / N
-2 * (log(.6177)* N) + 5 * log(N)
-2 * (log(.6522)* N) + 5 * log(N)
-2 * (log(.6702)* N) + 5 * log(N)
14
-2 * (log(.6702)* N) + 5 * log(N) / N
-2 * (log(.6702)* N) + 5 * log(N)
-2 * (log(.6522)* N) + 5 * log(N)
-2 * (log(.6522)* N) + 5 * log(N) / N
-2 * (log(.6177)* N) + 5 * log(N)/N
-2 * (log(.6177)* N) + 5 * log(N)
library(rstan)
2794.6 * .75
38000 / 14
96/12
48/12
library(rstan)
library(hBayesDM)
remove.packages("rstantools")
remove.packages("StanHeaders")
remove.packages("Rcpp")
remove.packages("hBayesDM")
remove.packages("pkgbuild")
install.packages('pkgbuild')
pkgbuild::has_build_tools(debug = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS=-O3 -march=native -mtune=native",
if( grepl("^darwin", R.version$os)) "CXX14FLAGS += -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "CXX11FLAGS=-O3 -march=native -mtune=native" else
"CXX14FLAGS += -fPIC",
file = M, sep = "\n", append = TRUE)
M
M <- file.path(Sys.getenv("HOME"), ".R", ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
file.edit(M)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
library(hBayesDM)
getwd()
set('E:\teaching\RL_R_Tromso_2018\R_intro_workshop\01.R_basics')
set('E:/teaching/RL_R_Tromso_2018/R_intro_workshop/01.R_basics')
setwd('E:/teaching/RL_R_Tromso_2018/R_intro_workshop/01.R_basics')
setwd('E:\\teaching\\RL_R_Tromso_2018\\R_intro_workshop\\01.R_basics')
p1 = ('E:\\teaching\\RL_R_Tromso_2018\\R_intro_workshop\\01.R_basics'
)
p2 = ('E:/teaching/RL_R_Tromso_2018/R_intro_workshop/01.R_basics')
p1
p2
cat(p1)
cat(p2)
dir()
setwd('_scripts/')
